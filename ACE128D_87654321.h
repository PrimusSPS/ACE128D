#pragma once

//All 128 position values according to the Datasheet of ACE128 Absolute Encoder

uint_8t ACE128[] = { 0, 56, 40, 55, 24, 0, 39, 52, 8, 57, 0, 0, 
  23, 0, 36, 13, 120, 0, 41, 54, 0, 0, 0, 53, 7, 0, 0, 0, 20, 
  19, 125, 18, 104, 105, 0, 0, 25, 106, 38, 0, 0, 58, 0, 0, 0,
  0, 37, 14, 119, 118, 0, 0, 0, 107, 0, 0, 4, 0, 3, 0, 109, 108, 
  2, 1, 88, 0, 89, 0, 0, 0, 0, 51, 9, 10, 90, 0, 22, 11, 0, 12, 
  0, 0, 42, 43, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 126, 127, 103, 0, 
  102, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 116, 117, 0, 0, 115, 
  0, 0, 0, 93, 94, 92, 0, 114, 95, 113, 0, 72, 71, 0, 68, 73, 0, 0, 
  29, 0, 70, 0, 69, 0, 0, 35, 34, 121, 0, 122, 0, 74, 0, 0, 30, 6, 0, 
  123, 0, 0, 0, 124, 17, 0, 0, 0, 67, 26, 0, 27, 28, 0, 59, 0, 0, 0, 
  0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 110, 0, 111, 16, 87, 
  84, 0, 45, 86, 85, 0, 50, 0, 0, 0, 46, 0, 0, 0, 33, 0, 83, 0, 44, 
  75, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 32, 100, 61, 101, 66, 0, 62, 0, 
  49, 99, 60, 0, 47, 0, 0, 0, 48, 77, 82, 78, 65, 76, 63, 0, 64, 98, 
  81, 79, 80, 97, 96, 112, 0 };


//I have not tested the above array with encoder 
//So if for some reason above array doesn't work or give inaccurate values 
//Comment it and uncomment and use this one below as I have tested the encoder with it.

//uint_8t ACE128[256] = { 0 };
//ACE128[1] = 56;
//ACE128[2] = 40;
//ACE128[3] = 55;
//ACE128[4] = 24;
//ACE128[6] = 39;
//ACE128[7] = 52;
//ACE128[8] = 8;
//ACE128[9] = 57;
//ACE128[12] = 23;
//ACE128[14] = 36;
//ACE128[15] = 13;
//ACE128[16] = 120;
//ACE128[18] = 41;
//ACE128[19] = 54;
//ACE128[23] = 53;
//ACE128[24] = 7;
//ACE128[28] = 20;
//ACE128[29] = 19;
//ACE128[30] = 125;
//ACE128[31] = 18;
//ACE128[32] = 104;
//ACE128[33] = 105;
//ACE128[36] = 25;
//ACE128[37] = 106;
//ACE128[38] = 38;
//ACE128[41] = 58;
//ACE128[46] = 37;
//ACE128[47] = 14;
//ACE128[48] = 119;
//ACE128[49] = 118;
//ACE128[53] = 107;
//ACE128[56] = 4;
//ACE128[58] = 3;
//ACE128[60] = 109;
//ACE128[61] = 108;
//ACE128[62] = 2;
//ACE128[63] = 1;
//ACE128[64] = 88;
//ACE128[66] = 89;
//ACE128[71] = 51;
//ACE128[72] = 9;
//ACE128[73] = 10;
//ACE128[74] = 90;
//ACE128[76] = 22;
//ACE128[77] = 11;
//ACE128[79] = 12;
//ACE128[82] = 42;
//ACE128[83] = 43;
//ACE128[92] = 21;
//ACE128[94] = 126;
//ACE128[95] = 127;
//ACE128[96] = 103;
//ACE128[98] = 102;
//ACE128[106] = 91;
//ACE128[112] = 116;
//ACE128[113] = 117;
//ACE128[116] = 115;
//ACE128[120] = 93;
//ACE128[121] = 94;
//ACE128[122] = 92;
//ACE128[124] = 114;
//ACE128[125] = 95;
//ACE128[126] = 113;
//ACE128[127] = 0;
//ACE128[128] = 72;
//ACE128[129] = 71;
//ACE128[131] = 68;
//ACE128[132] = 73;
//ACE128[135] = 29;
//ACE128[137] = 70;
//ACE128[139] = 69;
//ACE128[142] = 35;
//ACE128[143] = 34;
//ACE128[144] = 121;
//ACE128[146] = 122;
//ACE128[148] = 74;
//ACE128[151] = 30;
//ACE128[152] = 6;
//ACE128[154] = 123;
//ACE128[158] = 124;
//ACE128[159] = 17;
//ACE128[163] = 67;
//ACE128[164] = 26;
//ACE128[166] = 27;
//ACE128[167] = 28;
//ACE128[169] = 59;
//ACE128[175] = 15;
//ACE128[184] = 5;
//ACE128[188] = 110;
//ACE128[190] = 111;
//ACE128[191] = 16;
//ACE128[192] = 87;
//ACE128[193] = 84;
//ACE128[195] = 45;
//ACE128[196] = 86;
//ACE128[197] = 85;
//ACE128[199] = 50;
//ACE128[203] = 46;
//ACE128[207] = 33;
//ACE128[209] = 83;
//ACE128[211] = 44;
//ACE128[212] = 75;
//ACE128[215] = 31;
//ACE128[223] = 32;
//ACE128[224] = 100;
//ACE128[225] = 61;
//ACE128[226] = 101;
//ACE128[227] = 66;
//ACE128[229] = 62;
//ACE128[231] = 49;
//ACE128[232] = 99;
//ACE128[233] = 60;
//ACE128[235] = 47;
//ACE128[239] = 48;
//ACE128[240] = 77;
//ACE128[241] = 82;
//ACE128[242] = 78;
//ACE128[243] = 65;
//ACE128[244] = 76;
//ACE128[245] = 63;
//ACE128[247] = 64;
//ACE128[248] = 98;
//ACE128[249] = 81;
//ACE128[250] = 79;
//ACE128[251] = 80;
//ACE128[252] = 97;
//ACE128[253] = 96;
//ACE128[254] = 112;